#include <stdio.h>
#include <string.h>
#define MAX 100

int precedence(char op) {
    return (op == '^') ? 3 : (op == '*' || op == '/') ? 2 : (op == '+' || op == '-') ? 1 : -1;
}

void infixToPostfix(char *infix, char *postfix) {
    int i, j = 0, top = -1;
    char stack[MAX];
    for (i = 0; infix[i]; i++) {
        if (infix[i] >= 'a' && infix[i] <= 'z') postfix[j++] = infix[i];
        else if (infix[i] == '(') stack[++top] = infix[i];
        else if (infix[i] == ')') {
            while (top >= 0 && stack[top] != '(') postfix[j++] = stack[top--];
            top--;
        } else {
            while (top >= 0 && precedence(infix[i]) <= precedence(stack[top]))
                postfix[j++] = stack[top--];
            stack[++top] = infix[i];
        }
    }
    while (top >= 0) postfix[j++] = stack[top--];
    postfix[j] = '\0';
}

int main() {
    char infix[MAX], postfix[MAX];
    printf("Enter infix: ");
    scanf("%s", infix);
    infixToPostfix(infix, postfix);
    printf("Postfix: %s\n", postfix);
    return 0;
}
